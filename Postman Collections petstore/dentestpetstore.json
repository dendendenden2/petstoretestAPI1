{
	"info": {
		"_postman_id": "d71b49dc-52f7-4021-a8dc-0637f6b274fd",
		"name": "Den test petstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Find pet by ID with Assert",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1ebb729-a37e-417c-a17c-ffbd557cc53d",
						"exec": [
							"pm.test(\"Status code must be 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time below 2000 milliseconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"}); \r",
							"\r",
							"\r",
							"pm.test(\"Name = Den Test001 and Id = 9000001110001 and tags name = monks\", () => {\r",
							"    //parse the response JSON and test three properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Den Test001');\r",
							"    pm.expect(responseJson.id).to.eql(9000001110001);\r",
							"    pm.expect(responseJson.tags[0].name).to.eql(\"monks\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Category ID is existing and Category name = monkeyone\", () => {\r",
							"  const expectedObject = {\r",
							"    \"category\": {\r",
							"        \"id\": 10000101,\r",
							"        \"name\": \"monkeyone\"\r",
							"    }\r",
							"  };\r",
							"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Tags ID = 71323001 and Tags name = monks\", () => {\r",
							"  const expectedObject = {\r",
							"    \"tags\": [\r",
							"        {\r",
							"            \"id\": 71323001,\r",
							"            \"name\": \"monks\"\r",
							"        }\r",
							"    ]\r",
							"  };\r",
							"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "bfd9e324-3c19-4c72-99a1-3f52ad59139b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": {
						"key": "api_key",
						"value": "{{apiKey}}",
						"in": "header"
					}
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"description": "Added as a part of security scheme: apikey",
						"key": "api_key",
						"value": "<API Key>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"id": "69a99932-b9fd-4492-8e14-0bf14402152a",
							"key": "petId",
							"value": "9000001110001"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Finds Pets by status with assert",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body contains ID = 9000001110001\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"9000001110001\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains Name = Den Test001\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"Den Test001\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"id": "773e403b-9978-4d57-acb7-45105840a55f"
					}
				}
			],
			"id": "b00cbda9-ed3b-4191-bd41-88be6a32cb7c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": {
						"scope": "read:pets write:pets",
						"authUrl": "https://petstore.swagger.io/oauth/authorize",
						"grant_type": "implicit"
					}
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/findByStatus?status=available",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "available",
							"description": "(Required) Status values that need to be considered for filter"
						},
						{
							"key": "status",
							"value": "available",
							"description": "(Required) Status values that need to be considered for filter",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d18cd81d-da53-4a93-9469-26f5aa1a8ff2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2ab223bc-9d4f-4389-b435-0899cf89b93a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e4584aff-d68b-4d61-b278-d90a1bdad551",
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	]
}